#include "ast.h"    // For ProgramNode declaration
#include "parser.h" // For yylex, yyparse, and potentially extern root_ast_node
#include <iostream>

// The parser (parser.y) now defines 'root_ast_node' as the root of the AST.
// We need to declare it as extern here to use it.
extern ProgramNode* root_ast_node; // Changed from 'Func* root'

extern int yydebug; // For Bison's debug traces
extern int yyparse(); // The parsing function generated by Bison

int main(int argc, char* argv[]) {
    // You might want to handle file input here eventually
    // For now, it will likely read from stdin or whatever yyin is set to by default
    while (true) {
        yydebug = 1;  // Set to 1 to enable Bison debug output if needed

        std::cout << "Starting parsing..." << std::endl;
        int parse_result = yyparse(); // Call the parser

        if (parse_result == 0 && root_ast_node != nullptr) {
            std::cout << "Parsing successful!" << std::endl;
            // Here you would typically traverse or process the AST (root_ast_node)
            // For example: root_ast_node->print(); or root_ast_node->execute();
        }
        else {
            std::cout << "Parsing failed." << std::endl;
        }
    }

    return 0;
}